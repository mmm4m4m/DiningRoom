CREATE TABLE IF NOT EXISTS users(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  email VARCHAR(100) NOT NULL UNIQUE,
  hashed_password VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS clients(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  user_id INTEGER NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users(id)
  ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS employees(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  user_id INTEGER,
  position VARCHAR(50) NOT NULL,
  first_name VARCHAR(100) NOT NULL,
  last_name VARCHAR(100) NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users(id)
  ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS admins(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  user_id INTEGER NOT NULL,
  first_name VARCHAR(100) NOT NULL,
  last_name VARCHAR(100) NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users(id)
  ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS products(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name VARCHAR(100) NOT NULL 
);

CREATE TABLE IF NOT EXISTS orders(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  employee_id INTEGER,
  client_id INTEGER NOT NULL,
  status VARCHAR(10) NOT NULL,
  FOREIGN KEY (employee_id) REFERENCES employees(id)
  ON DELETE CASCADE ON UPDATE NO ACTION,
  FOREIGN KEY (client_id) REFERENCES clients(id)
  ON DELETE CASCADE ON UPDATE NO ACTION
); 

CREATE TABLE IF NOT EXISTS dishes(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name VARCHAR(255),
  description TEXT,
  price FLOAT(10,2)
);

CREATE TABLE IF NOT EXISTS order_dish(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  order_id INTEGER NOT NULL,
  dish_id INTEGER NOT NULL,
  FOREIGN KEY (order_id) REFERENCES orders(id)
  ON DELETE CASCADE ON UPDATE NO ACTION,
  FOREIGN KEY (dish_id) REFERENCES dishes(id)
  ON DELETE CASCADE ON UPDATE NO ACTION
); 

CREATE TABLE IF NOT EXISTS product_dish(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  product_id INTEGER,
  dish_id INTEGER NOT NULL,
  FOREIGN KEY (product_id) REFERENCES products(id)
  ON DELETE CASCADE ON UPDATE NO ACTION,
  FOREIGN KEY (dish_id) REFERENCES dishes(id)
  ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS supplies(
  id INTEGER PRIMARY KEY AUTOINCREMENT, 
  admin_id INTEGER NOT NULL,
  date DATE,
  FOREIGN KEY (admin_id) REFERENCES admins(id)
  ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS supply_product (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  supply_id INTEGER,
  product_id INTEGER NOT NULL,
  price FLOAT(10,2),
  quantity INTEGER,
  FOREIGN KEY (supply_id) REFERENCES supplies(id)
  ON DELETE CASCADE ON UPDATE NO ACTION
);
